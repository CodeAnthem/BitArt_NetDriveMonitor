<UserControl x:Name="RootElement"
	x:Class="WPF.AppUI.EditDrives.EditDrivesView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:WPF.AppUI.EditDrives"
	xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:validation="clr-namespace:WPF.AppUI.Validation"
	xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
	d:DataContext="{d:DesignInstance Type=local:EditDrivesViewModel}"
	d:DesignHeight="450"
	d:DesignWidth="800"
	mc:Ignorable="d">

	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="/Styles/MySmartHint.xaml" />
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
	</UserControl.Resources>

	<Grid>

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>

		<!--  Header & Buttons  -->
		<Grid
			Grid.Row="0"
			Margin="0,0,0,10">

			<materialDesign:Card>

				<Grid>

					<Grid.RowDefinitions>
						<RowDefinition Height="45" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<Grid.Resources>
						<Style TargetType="Grid">
							<Setter Property="VerticalAlignment" Value="Center" />
						</Style>
					</Grid.Resources>

					<Grid Grid.Column="0">
						<StackPanel
							HorizontalAlignment="Left"
							Orientation="Vertical">
							<TextBlock Text="Manage Drives"
								Style="{DynamicResource MaterialDesignHeadline6TextBlock}" />
							<StackPanel Orientation="Horizontal">

								<StackPanel Orientation="Horizontal">
									<StackPanel.Resources>
										<Style
											x:Key="CoreStatus"
											BasedOn="{StaticResource MaterialDesignHelperTextBlock}"
											TargetType="TextBlock">
											<Setter Property="Foreground" Value="Red" />
											<Setter Property="Text" Value="Not Ready" />
											<Style.Triggers>
												<DataTrigger
													Binding="{Binding IsCoreEnabled, Mode=OneWay}"
													Value="True">
													<Setter Property="Foreground" Value="Green" />
													<Setter Property="Text" Value="Ready" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</StackPanel.Resources>

									<TextBlock Text="Status"
										Style="{DynamicResource MaterialDesignHelperTextBlock}" />
									<Separator Margin="2" />
									<TextBlock Style="{DynamicResource CoreStatus}" />
								</StackPanel>

								<Separator Margin="5" />
								<StackPanel Orientation="Horizontal">
									<TextBlock Text="Drives amount:" />
									<Separator Margin="2" />
									<TextBlock Text="{Binding RowItems.Count}"
										Style="{StaticResource MaterialDesignHelperTextBlock}" />
								</StackPanel>
							</StackPanel>
						</StackPanel>
					</Grid>

					<Grid Grid.Column="1">
						<StackPanel
							HorizontalAlignment="Center"
							Orientation="Horizontal" />
					</Grid>

					<Grid Grid.Column="2">

						<StackPanel
							HorizontalAlignment="Right"
							Orientation="Horizontal">

							<Button Content="Save"
								Width="auto"
								Command="{Binding NavigateSaveCommand}"
								Style="{DynamicResource MahApps.Styles.Button.Dialogs.Accent}"
								ToolTip="Save configured network drives" />

							<Separator Margin="16,0" />

							<Button Content="Cancel"
								Width="auto"
								Command="{Binding NavigateCancelCommand}"
								Style="{DynamicResource MahApps.Styles.Button.Dialogs.Accent}"
								ToolTip="Abord the changes" />

						</StackPanel>

					</Grid>

				</Grid>

			</materialDesign:Card>

		</Grid>

		<!--  Datagrid & Add Drives  -->
		<Grid
			Grid.Row="1"
			Margin="0,0,0,16">
			<Border
				Padding="10"
				Background="{DynamicResource MahApps.Brushes.Menu.Background}"
				BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
				BorderThickness="2"
				CornerRadius="20">

				<Grid HorizontalAlignment="Stretch">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*" />
					</Grid.ColumnDefinitions>

					<!--  DataGrid  -->
					<Grid Grid.Row="0">

						<Grid.Resources>
							<Style
								x:Key="DriveGridHeaderStyle"
								BasedOn="{StaticResource MahApps.Styles.DataGridColumnHeader}"
								TargetType="DataGridColumnHeader">
								<Setter Property="HorizontalContentAlignment" Value="Center" />
								<Setter Property="Margin" Value="0,10" />
							</Style>

							<Style
								x:Key="DriveGridCellStyle"
								BasedOn="{StaticResource MahApps.Styles.DataGridCell}"
								TargetType="DataGridCell">
								<Setter Property="Focusable" Value="True" />
								<Setter Property="HorizontalContentAlignment" Value="Center" />
								<Setter Property="VerticalContentAlignment" Value="Center" />
								<!--<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />-->
							</Style>

							<Style
								x:Key="MyEditingCellStyle"
								BasedOn="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}"
								TargetType="TextBox">
								<Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />

								<Setter Property="wpf:TextFieldAssist.HasClearButton" Value="True" />
								<Setter Property="Focusable" Value="True" />
								<Setter Property="HorizontalAlignment" Value="Right" />
								<Setter Property="VerticalAlignment" Value="Center" />
								<Setter Property="HorizontalContentAlignment" Value="Right" />
								<Setter Property="AcceptsReturn" Value="False" />
								<Setter Property="CharacterCasing" Value="Lower" />
							</Style>

						</Grid.Resources>

						<DataGrid x:Name="DataGrid"
							Width="auto"
							HorizontalAlignment="Stretch"
							HorizontalContentAlignment="Stretch"
							AutoGenerateColumns="False"
							Background="{DynamicResource MahApps.Brushes.Menu.Background}"
							CanUserAddRows="False"
							CanUserDeleteRows="False"
		
							CellStyle="{DynamicResource DriveGridCellStyle}"
							ColumnHeaderStyle="{DynamicResource DriveGridHeaderStyle}"
							FontSize="15"
							GridLinesVisibility="Horizontal"
							IsReadOnly="False"
							ItemsSource="{Binding RowItems, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
							RowStyleSelector="{StaticResource HamburgerMenuItemStyleSelector}"
							SelectedItem="{Binding SelectedRow}"
							SelectionMode="Single"
							SelectionUnit="FullRow"
							Style="{DynamicResource MahApps.Styles.DataGrid.Azure}">

							<DataGrid.RowStyle>
								<Style TargetType="{x:Type DataGridRow}">
									<Style.Triggers>
										<Trigger Property="IsSelected" Value="True">
											<Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
											<Setter Property="Foreground" Value="Orange" />
										</Trigger>
									</Style.Triggers>
								</Style>
							</DataGrid.RowStyle>

							<DataGrid.Columns>

								<DataGridTemplateColumn
									Width="90"
									CanUserReorder="False"
									CanUserResize="False"
									CellStyle="{StaticResource MahApps.Styles.DataGridCell}"
									Header="Delete">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<Button
												Margin="0,4,0,4"
												HorizontalAlignment="Center"
												Background="{DynamicResource MahApps.Brushes.Menu.Background}"
												BorderBrush="Gray"
												BorderThickness="1"
												Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=DataContext.DeleteDriveCommand}">
												<Image
													Margin="0,2,0,0"
													Source="/Resources/Assets/Icons/red-cross.png" />
											</Button>
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>

								<DataGridTemplateColumn
									CanUserReorder="False"
									CanUserSort="True"
									Header="Letter"
									SortDirection="Ascending"
									SortMemberPath="Drive.Info.Letter">
									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>
											<ComboBox
												Width="100"
												HorizontalAlignment="Center"
												HorizontalContentAlignment="Center"
												ItemsSource="{Binding AvailableLetters, UpdateSourceTrigger=LostFocus}"
												SelectedItem="{Binding Drive.Info.Letter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
												SelectionChanged="ComboBox_SelectionChanged"
												Style="{StaticResource MaterialDesignDataGridComboBox}" />
										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>
								<!--  ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Path=DataContext.DriveLettersList}"  -->

								<!--<DataGridComboBoxColumn
									Width="200"
									DisplayMemberPath="{Binding DriveLettersList}"
									Header="Letter"
									SelectedItemBinding="{Binding Info.Letter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
									<DataGridComboBoxColumn.ElementStyle>
										<Style BasedOn="{StaticResource MahApps.Styles.ComboBox.DataGrid}" TargetType="ComboBox">
											<Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Path=DataContext.DriveLettersList}" />
										</Style>
									</DataGridComboBoxColumn.ElementStyle>
									<DataGridComboBoxColumn.EditingElementStyle>
										<Style BasedOn="{StaticResource MahApps.Styles.ComboBox.DataGrid.Editing}" TargetType="ComboBox">
											<Setter Property="ItemsSource" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Path=DataContext.DriveLettersList}" />
										</Style>
									</DataGridComboBoxColumn.EditingElementStyle>
								</DataGridComboBoxColumn>-->

								<!--<DataGridTextColumn
									Width="100"
									Binding="{Binding Drive.Info.Letter}"
									CanUserReorder="False" CanUserResize="False"
									Header="Letter" />-->
								<!--<materialDesign:DataGridTextColumn
									Width="*"
									Binding="{Binding Drive.Info.HostName}"
									EditingElementStyle="{StaticResource MyEditingCellStyle}"
									Header="Server"
									MaxLength="50" />-->

								<DataGridTemplateColumn
									CanUserReorder="False"
									CanUserSort="True"
									Header="IP || Address"
									SortDirection="Ascending"
									SortMemberPath="Drive.Info.Letter">

									<DataGridTemplateColumn.CellTemplate>
										<DataTemplate>

											<Grid
												Height="auto"
												Margin="10,20"
												Background="{DynamicResource MahApps.Brushes.ThemeBackground}">
												<Grid.RowDefinitions>
													<RowDefinition Height="*" />
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>

												<TextBox
													Grid.Row="0"
													Width="200"
													Height="auto"
													HorizontalAlignment="Left"
													VerticalAlignment="Center"
													HorizontalContentAlignment="Left"
													VerticalContentAlignment="Center"
													materialDesign:HintAssist.HelperText="OK"
													materialDesign:HintAssist.Hint="Hostname"
													materialDesign:HintAssist.IsFloating="False"
													materialDesign:TextFieldAssist.DecorationVisibility="Visible"
													materialDesign:TextFieldAssist.HasClearButton="True"
													materialDesign:TextFieldAssist.HasFilledTextField="True"
													materialDesign:TextFieldAssist.RippleOnFocusEnabled="False"
													materialDesign:TextFieldAssist.TextBoxViewMargin="0,0"
													materialDesign:TextFieldAssist.UnderlineBrush="White"
													MaxLength="50"
													Style="{StaticResource MaterialDesignFloatingHintTextBox}">
													<TextBox.Resources>
														<Style
															x:Key="MySmartHintStyle2"
															TargetType="TextBlock">
															<Setter Property="FontSize" Value="20" />
														</Style>
													</TextBox.Resources>

													<TextBox.Text>
														<Binding
															Path="Drive.Info.HostName"
															UpdateSourceTrigger="PropertyChanged">
															<Binding.ValidationRules>
																<validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
															</Binding.ValidationRules>
														</Binding>
													</TextBox.Text>
												</TextBox>
											</Grid>

										</DataTemplate>
									</DataGridTemplateColumn.CellTemplate>
								</DataGridTemplateColumn>


								<DataGridTextColumn
									Width="*"
									Binding="{Binding Drive.Info.Share}"
									Header="Share" />
								<DataGridCheckBoxColumn
									Binding="{Binding Drive.Options.AutoConnectIfAvailable}"
									Header="Auto: if available" />
								<DataGridCheckBoxColumn
									Binding="{Binding Drive.Options.AutoConnectLanOnly}"
									Header="Auto: LAN only" />

							</DataGrid.Columns>
						</DataGrid>
					</Grid>

					<!--  Add new drive  -->
					<Grid
						Grid.Row="1"
						VerticalAlignment="Center"
						Visibility="Visible">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<StackPanel
							Grid.Row="0"
							HorizontalAlignment="Center"
							Orientation="Horizontal">

							<!--  Letter  -->
							<StackPanel
								Grid.Column="0"
								Width="100">

								<StackPanel.Resources>
									<Style
										x:Key="MyDropdownStyle"
										BasedOn="{StaticResource MahApps.Styles.ListBoxItem}"
										TargetType="{x:Type ListBoxItem}">
										<Setter Property="HorizontalAlignment" Value="Stretch" />
										<Setter Property="HorizontalContentAlignment" Value="Left" />
										<Setter Property="VerticalContentAlignment" Value="Center" />
										<Setter Property="VerticalAlignment" Value="Stretch" />
										<Setter Property="Margin" Value="0,0,0,0" />
									</Style>
								</StackPanel.Resources>

								<TextBlock Text="Drive Letter"
									Margin="0,5"
									Style="{DynamicResource MaterialDesignSubtitle1TextBlock}" />
								<ComboBox x:Name="ComboBox_Letters"
									Margin="1,0"
									HorizontalAlignment="Stretch"
									HorizontalContentAlignment="Left"
									materialDesign:HintAssist.HelperText="OK"
									materialDesign:HintAssist.Hint="Letter"
									materialDesign:HintAssist.IsFloating="False"
									materialDesign:TextFieldAssist.HasClearButton="True"
									materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource MahApps.Brushes.Accent}"
									Cursor="Hand"
									ItemContainerStyle="{StaticResource MyDropdownStyle}"
									Loaded="ComboBox_Letters_Loaded"
									MaxDropDownHeight="190"
									OverridesDefaultStyle="False"
									SelectedIndex="-1"
									SelectionChanged="ComboBox_Letters_SelectionChanged"
									ToolTip="Choose an available drive letter">
									<!--  ItemsSource="{Binding ElementName=RootElement, Path=AvailableDriveLettersCol}"  -->

									<ComboBox.Text>
										<Binding
											Mode="OneWayToSource"
											NotifyOnSourceUpdated="True"
											NotifyOnTargetUpdated="True"
											Path="NewDriveLetter"
											UpdateSourceTrigger="PropertyChanged">
											<Binding.ValidationRules>
												<validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
											</Binding.ValidationRules>
										</Binding>
									</ComboBox.Text>

								</ComboBox>
							</StackPanel>

							<!--  HostName  -->
							<StackPanel
								Grid.Column="1"
								Width="200"
								Margin="20,0,20,0">
								<TextBlock Text="Server"
									FontSize="18" />
								<TextBox x:Name="DriveHostName"
									materialDesign:HintAssist.HelperText="OK"
									materialDesign:HintAssist.Hint="Server"
									FontSize="14"
									Style="{StaticResource MahApps.MaterialDesignTextBox}">

									<TextBox.Text>
										<Binding
											Mode="TwoWay"
											Path="NewDriveHostName"
											UpdateSourceTrigger="PropertyChanged">
											<Binding.ValidationRules>
												<validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
											</Binding.ValidationRules>
										</Binding>


									</TextBox.Text>

								</TextBox>
							</StackPanel>

							<!--  Share  -->
							<StackPanel
								Grid.Column="2"
								Width="200"
								Margin="20,0,20,0">
								<TextBlock Text="Share"
									FontSize="18" />
								<TextBox
									materialDesign:HintAssist.HelperText="OK"
									materialDesign:HintAssist.Hint="Share"
									FontSize="14"
									Style="{StaticResource MahApps.MaterialDesignTextBox}">

									<TextBox.Text>
										<Binding
											Path="NewDriveShare"
											UpdateSourceTrigger="PropertyChanged">
											<Binding.ValidationRules>
												<validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>

									<!--<TextBox.Text>

										<Binding Source="{Binding NewDriveShare}" UpdateSourceTrigger="PropertyChanged">
											<Binding.ValidationRules>
												<validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>-->
								</TextBox>
							</StackPanel>

						</StackPanel>

						<StackPanel
							Grid.Row="1"
							Margin="0,30,0,0">
							<Button Content="Add drive"
								Width="100"
								Command="{Binding AddDriveCommand}">

								<!--<Button.CommandParameter>
									<MultiBinding Converter="{StaticResource NetDriveConverter}">
										<Binding ElementName="DriveHostName" Path="Text" />
									</MultiBinding>
								</Button.CommandParameter>-->
							</Button>
						</StackPanel>

					</Grid>

				</Grid>
			</Border>
		</Grid>

		<!--  Debug  -->
		<Grid
			Grid.Row="2"
			Margin="0,0,0,16"
			Visibility="Visible">
			<StackPanel Orientation="Vertical">
				<TextBlock Text="DEBUG INFOS" />
				<StackPanel Orientation="Horizontal">

					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Selected Drive = "
							Foreground="White" />
						<TextBlock Text="{Binding SelectedRow.Drive.Info.Letter}"
							Foreground="White" />
					</StackPanel>

				</StackPanel>
			</StackPanel>
		</Grid>

	</Grid>
</UserControl>
